name: Docker Image CI

env:
  DOCKER_ORG: actions
  IMAGE_NAME: python

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main
    paths-ignore:
      - "./*.md"
      - "./**/*.md"
      - .gitignore
    tags: [ "*" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        version: [3.10.6, 2.7.18]

    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Checkout
      uses: actions/checkout@v4
    - name: Get the version
      id: get_version
      run: |
        RAW_REF=${GITHUB_REF/refs\/tags\//}
        REF=${RAW_REF#${GITHUB_REF}}
        echo ::set-output name=TAG::${REF:-latest}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Cache Docker layers
      uses: actions/cache@v3
      id: cache
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Docker Buildx (build)
      env:
        VERSION: ${{ matrix.version }}
      run: |
        .github/build.sh $DOCKER_ORG $VERSION ${{ steps.get_version.outputs.TAG }} false
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASS }}
    - name: Docker Buildx (push)
      env:
        VERSION: ${{ matrix.version }}
      run: |
        .github/build.sh $DOCKER_ORG $VERSION ${{ steps.get_version.outputs.TAG }} true
    - name: Inspect image
      env:
        VERSION: ${{ matrix.version }}
      run: |
        MAJOR_VERSION=${VERSION%?????}
        MINOR_VERSION=$(echo $VERSION |cut -d '.' -f 2)
        PATCH_VERSION=$(echo $VERSION |cut -d '.' -f 3)
        image_tag=""
        if [ "x${{ steps.get_version.outputs.TAG }}" = "xlatest" ]; then
          image_tag="${MAJOR_VERSION}.${MINOR_VERSION}-${{ steps.get_version.outputs.TAG }}"
        else
          image_tag="${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}-${{ steps.get_version.outputs.TAG }}"
        fi
        docker buildx imagetools inspect ${DOCKER_ORG}/${IMAGE_NAME}:${image_tag}
